{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setReverse","NONE","sortType","setSortType","sortAlphabetCN","cn","ALPHABET","sortBylengthCN","LENGTH","reverseCN","shouldResetButtonRender","reorderedGoods","goods","visibleGoods","sort","goodA","goodB","localeCompare","length","reverse","getReorderedGoods","className","type","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAuCE,IAAME,EAAgB,WAC3B,MAAiCC,oBAAS,GAA1C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KAmBMC,EAAiBC,IAAG,iBACxB,CAAE,WAAYH,IAAaP,EAASW,WAEhCC,EAAiBF,IAAG,oBACxB,CAAE,WAAYH,IAAaP,EAASa,SAEhCC,EAAYJ,IAAG,oBAAqB,CAAE,YAAaN,IAEnDW,EAA0BR,IAAaP,EAASM,MAAQF,EAExDY,EA3DD,SACLC,EADK,GAGJ,IADCV,EACF,EADEA,SAAUH,EACZ,EADYA,WAENc,EAAY,YAAOD,GAqBzB,OAnBIV,IAAaP,EAASM,MACxBY,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQd,GACN,KAAKP,EAASW,SACZ,OAAOS,EAAME,cAAcD,GAE7B,KAAKrB,EAASa,OACZ,OAAOO,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXnB,GACFc,EAAaM,UAGRN,EAkCgBO,CACrBxB,EAAiB,CAAEM,WAAUH,eAG/B,OACE,sBAAKsB,UAAU,kBAAf,UACE,oBAAIA,UAAU,aAAd,uCACA,sBAAKA,UAAU,UAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAWjB,EACXmB,QAvCuB,WAC/BpB,EAAYR,EAASW,WAmCf,iCAQA,wBACEgB,KAAK,SACLD,UAAWd,EACXgB,QA3CiB,WACzBpB,EAAYR,EAASa,SAuCf,4BAQA,wBACEc,KAAK,SACLD,UAAWZ,EACXc,QA/Ca,WACrBvB,GAAYD,IA2CN,qBAOCW,GACC,wBACEY,KAAK,SACLD,UAAU,4BACVE,QAnDQ,WAClBvB,GAAW,GACXG,EAAYR,EAASM,OA8Cb,sBASJ,6BACGU,EACEa,KAAI,SAAAC,GAAI,OACP,oBACE,UAAQ,OADV,SAIGA,GAFIA,eCpIrBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.2cee4e31.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  const visibleGoods = [...goods];\n\n  if (sortType !== SortType.NONE) {\n    visibleGoods.sort((goodA, goodB) => {\n      switch (sortType) {\n        case SortType.ALPHABET:\n          return goodA.localeCompare(goodB);\n\n        case SortType.LENGTH:\n          return goodA.length - goodB.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setReverse] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n\n  const handleSortAlphabetically = () => {\n    setSortType(SortType.ALPHABET);\n  };\n\n  const handleSortByLength = () => {\n    setSortType(SortType.LENGTH);\n  };\n\n  const handleReversed = () => {\n    setReverse(!isReversed);\n  };\n\n  const handleReset = () => {\n    setReverse(false);\n    setSortType(SortType.NONE);\n  };\n\n  const sortAlphabetCN = cn('button is-info',\n    { 'is-light': sortType !== SortType.ALPHABET });\n\n  const sortBylengthCN = cn('button is-success',\n    { 'is-light': sortType !== SortType.LENGTH });\n\n  const reverseCN = cn('button is-warning', { 'is-light': !isReversed });\n\n  const shouldResetButtonRender = sortType !== SortType.NONE || isReversed;\n\n  const reorderedGoods = getReorderedGoods(\n    goodsFromServer, { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <h1 className=\"title is-1\">React List of Goods Hooks</h1>\n      <div className=\"wrapper\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={sortAlphabetCN}\n            onClick={handleSortAlphabetically}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={sortBylengthCN}\n            onClick={handleSortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={reverseCN}\n            onClick={handleReversed}\n          >\n            Reverse\n          </button>\n          {shouldResetButtonRender && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n        <ul>\n          {reorderedGoods\n            .map(good => (\n              <li\n                data-cy=\"Good\"\n                key={good}\n              >\n                {good}\n              </li>\n            ))}\n        </ul>\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}